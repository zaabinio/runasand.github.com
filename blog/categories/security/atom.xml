<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | Runa A. Sandvik]]></title>
  <link href="http://blog.encrypted.cc/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://blog.encrypted.cc/"/>
  <updated>2013-05-25T17:58:12-04:00</updated>
  <id>http://blog.encrypted.cc/</id>
  <author>
    <name><![CDATA[Runa A. Sandvik]]></name>
    <email><![CDATA[runa.sandvik@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Little Printer Auth Bypass]]></title>
    <link href="http://blog.encrypted.cc/blog/2013/03/01/little-printer-auth-bypass/"/>
    <updated>2013-03-01T10:29:00-05:00</updated>
    <id>http://blog.encrypted.cc/blog/2013/03/01/little-printer-auth-bypass</id>
    <content type="html"><![CDATA[<p>The <a href="http://bergcloud.com/littleprinter/">Little Printer</a>, created by
<a href="http://berglondon.com/">BERG</a>, holds a compact, inkless, thermal
printer and prints messages filled with things like your schedule,
tweets, news headlines and friendsâ€™ birthdays.</p>

<p><img class="center" src="/images/littleprinter.jpg"></p>

<p>The website <a href="http://remote.bergcloud.com/">remote.bergcloud.com</a> is used
to communicate with the Little Printer; set up print subscriptions, send
messages to the printer, give friends permission to send messages, and
so on. I discovered an authentication/authorization bypass issue on this
site which allows an owner of a Little Printer, as well as any user who
has been authorized to print messages to at least one Little Printer, to
print messages to any of the Little Printers out there -- without prior
authorization from the owners.</p>

<p>The HTTP POST which is sent when you message the Little Printer contains
the following payload:</p>

<p><code>
utf8=%E2%9C%93&amp;authenticity_token=TOKEN&amp;message%5Bbot_id%5D=ID \
&amp;message%5Bstyle%5D=1&amp;message%5Bmessage%5D=Hello!
</code></p>

<p>The field <strong>message[bot_id]</strong> contains the ID of the Little Printer,
which is a sequential numeric identifier. Changing the ID allows a user
to send a message to another Little Printer without being authorized by
the owner. The user is also able to print messages without
<strong>authenticity_token</strong> present in the payload.</p>

<p>After printing a message, the site will normally display a box saying
<em>Message sent</em>. When printing to another Little Printer, without really
having permission to do so, the site displays an error and it seems like
printing was not successful. However, that's not the case.</p>

<p>I reported this issue directly to Nick Ludlam, the CTO at BERG,
yesterday. He replied an hour later saying that the issue had been
patched on the live system. More information about this can be found in
BERG's <a href="http://bergcloud.com/2013/03/01/berg-cloud-security-announcement/">security announcement</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing Tor Hidden Services with Burp Pro]]></title>
    <link href="http://blog.encrypted.cc/blog/2013/02/25/testing-tor-hidden-services-with-burp-pro/"/>
    <updated>2013-02-25T09:33:00-05:00</updated>
    <id>http://blog.encrypted.cc/blog/2013/02/25/testing-tor-hidden-services-with-burp-pro</id>
    <content type="html"><![CDATA[<p>On February 15, Dafydd Stuttard announced the release of <a href="http://releases.portswigger.net/2013/02/v1505.html">Burp Suite v1.5.05</a>. This release contains a number of feature enhancements and bugfixes, including an extension to the SOCKS proxy support which allows users to specify that all DNS lookups should be done remotely via the proxy. This means that it is possible to test Tor hidden services with Burp.</p>

<p>This feature is currently only available in Burp Pro, but should eventually make its way into the free edition.</p>

<h3>Tor hidden services</h3>

<p><a href="https://www.torproject.org/docs/hidden-services.html.en">Tor hidden services</a>, sometimes also referred to as the <em>hidden web</em>, <em>dark web</em>, and <em>deep web</em>, were deployed on the Tor network in 2004. Hidden services allow users to host various kinds of resources, such as websites and instant messaging servers, without having their identity or location revealed. Not only does this protect the operators, but also the resources.</p>

<p>A hidden service can only be accessed through its Tor-specific <em>.onion</em> pseudo-<em>top-level domain (TLD)</em>. One example is <a href="http://3g2upl4pq6kufc4m.onion/">3g2upl4pq6kufc4m.onion</a>, which is the address of the <a href="https://duckduckgo.com/">Duck Duck Go</a> search engine. The relays in the Tor network understand the .onion pseudo-TLD and route data anonymously both to and from the hidden service. The IP address, physical location, or operator of a Tor hidden service is never revealed to relays in the Tor network, visitors, or the Tor Project -- as long as the hidden service has been properly <a href="https://www.torproject.org/docs/tor-hidden-service.html.en">configured and secured</a>.</p>

<h3>Tor hidden services and Burp</h3>

<p>To test a Tor hidden service with Burp, make sure the Tor Browser, Tor, and Burp can all talk to each other:</p>

<ul>
<li>Download the <a href="https://www.torproject.org/download/download-easy.html.en">Tor Browser Bundle</a>, <a href="https://www.torproject.org/docs/verifying-signatures.html.en">verify the signature</a>, and get it up and running</li>
<li>Figure out which SOCKS port the Tor Browser is using to talk to Tor: <em>Preferences</em>, <em>Advanced</em>, <em>Network</em>, <em>Settings</em> (next to <em>Configure how TorBrowser connects to the Internet</em>)</li>
<li>Configure Burp to use the same SOCKS proxy as the Tor Browser: <em>Options</em>, <em>Connections</em>, scroll down to the SOCKS proxy section, enter the host and port, and tick <em>Use SOCKS proxy</em> and <em>Do DNS lookups over SOCKS proxy</em></li>
<li>Configure the Tor Browser to use Burp as an HTTP Proxy: on the proxy settings page, enter <em>127.0.0.1:8080</em> as the HTTP proxy and tick <em>Use this proxy for all server protocols</em></li>
</ul>


<p>Visiting <a href="http://3g2upl4pq6kufc4m.onion/">3g2upl4pq6kufc4m.onion</a> in the Tor Browser gives the following output in Burp:</p>

<p><img src="/images/burp-tor-hs.png"></p>
]]></content>
  </entry>
  
</feed>
